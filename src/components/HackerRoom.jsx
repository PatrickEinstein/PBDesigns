// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// Command: npx gltfjsx@6.5.0 hacker-room-new.glb -T
// Files: hacker-room-new.glb [34.62MB] > /Users/hsuwinlat/Desktop/jsm pj/threejscc-portfolio/public/models/hacker-room-new-transformed.glb [2.56MB] (93%)
// */

// import { useGLTF, useTexture } from '@react-three/drei';

// function HackerRoom(props) {
//     const { nodes, materials } = useGLTF('/models/hacker-room.glb');

//     const monitorTexture = useTexture('/textures/desk/monitor.png')
//     const screenTexture = useTexture('textures/desk/screen.png');

//     return (
//         <group {...props} dispose={null}>
//             <mesh geometry={nodes.screen_screens_0.geometry} material={materials.screens}>
//                 <meshMatcapMaterial map={screenTexture} />
//             </mesh>
//             <mesh geometry={nodes.screen_glass_glass_0.geometry} material={materials.glass} />
//             <mesh geometry={nodes.table_table_mat_0_1.geometry} material={materials.table_mat} />
//             <mesh geometry={nodes.table_table_mat_0_2.geometry} material={materials.computer_mat}>
//                 <meshMatcapMaterial map={monitorTexture} />
//             </mesh>
//             <mesh geometry={nodes.table_table_mat_0_3.geometry} material={materials.server_mat} />
//             <mesh geometry={nodes.table_table_mat_0_4.geometry} material={materials.vhsPlayer_mat} />
//             <mesh geometry={nodes.table_table_mat_0_5.geometry} material={materials.stand_mat} />
//             <mesh geometry={nodes.table_table_mat_0_6.geometry} material={materials.mat_mat} />
//             <mesh geometry={nodes.table_table_mat_0_7.geometry} material={materials.arm_mat} />
//             <mesh geometry={nodes.table_table_mat_0_8.geometry} material={materials.tv_mat}>
//                 <meshMatcapMaterial map={monitorTexture} />
//             </mesh>
//             <mesh geometry={nodes.table_table_mat_0_9.geometry} material={materials.cables_mat} />
//             <mesh geometry={nodes.table_table_mat_0_10.geometry} material={materials.props_mat} />
//             <mesh geometry={nodes.table_table_mat_0_11.geometry} material={materials.ground_mat} />
//             <mesh geometry={nodes.table_table_mat_0_12.geometry} material={materials.key_mat} />
//         </group>
//     );
// }

// useGLTF.preload('/models/hacker-room.glb');
// export default  HackerRoom

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";

function HackerRoom(props) {

  const { nodes, materials } = useGLTF("/models/vianney_house_2.glb");

  const meshes = [
    {
      geometry: nodes.Object001_Object001_mtl_0.geometry,
      material: materials.Object001_mtl,
    },
    {
      geometry: nodes.Object002_Object002_mtl_0.geometry,
      material: materials.Object002_mtl,
    },
    {
      geometry: nodes.Object003_Object003_mtl_0.geometry,
      material: materials.Object003_mtl,
    },
    {
      geometry: nodes.Object004_Object004_mtl_0.geometry,
      material: materials.Object004_mtl,
    },
    {
      geometry: nodes.vitre_BATIMENUISERIE_VITRE_0.geometry,
      material: materials["BATI.MENUISERIE_VITRE"],
    },
  ];

  const groupProps = {
    // position: [-100.366, -1.254, -80.867],
    // rotation: [-50, -80, 60],
    scale: [0.1, 0.1, 0.1],
  };

  return (
    <group {...props} dispose={null}>
      {meshes.map(({ geometry, material }, index) => (
        <group key={index} {...groupProps}>
          <mesh
            castShadow
            receiveShadow
            geometry={geometry}
            material={material}
            position={[-735.366, -715.867, 1.254]}
          />
        </group>
      ))}
    </group>
  );
}

useGLTF.preload("/models/vianney_house_2.glb");
export default HackerRoom;
